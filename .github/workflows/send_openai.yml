## Purpose: Sends the content to OpenAI for translation into specified languages.
## Inputs:
## - content
## - languages
## - gpt_model (defaulted to gpt-4)
## - general_instruction
## - openai_api_key (optional, defaults to secrets.OPENAI_API_KEY)
## Steps:
## - Sets up Python.
## - Installs the OpenAI Python library.
## - Runs scripts/translate_strings.py.

name: Translate Localizable.strings

on:
  workflow_call:
    inputs:
      content:
        description: 'Content to translate'
        required: true
        type: string
      languages:
        description: 'Target languages'
        required: true
        type: string
      gpt_model:
        description: 'GPT model to use'
        required: true
        type: string
      general_instruction:
        description: 'Instruction for translation'
        required: true
        type: string
    outputs:
      num_of_languages:
        description: 'Number of languages translated'
        value: ${{ jobs.translate.outputs.num_of_languages }}
      tokens_count_used:
        description: 'Tokens used in translation'
        value: ${{ jobs.translate.outputs.tokens_count_used }}

jobs:
  translate:
    runs-on: ubuntu-latest
    outputs:
      num_of_languages: ${{ steps.translation.outputs.num_of_languages }}
      tokens_count_used: ${{ steps.translation.outputs.tokens_count_used }}
    steps:
      ## Step 1: Checkout the repository to access scripts and resources
      - name: Checkout repository
        uses: actions/checkout@v3

      ## Step 2: Set up Python environment
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      ## Step 3: Install Python dependencies required for the translation script
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      ## Step 4: Check if OPENAI_API_KEY secret is available
      - name: Verify OPENAI_API_KEY availability
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "OPENAI_API_KEY is not available."
            exit 1
          else
            echo "OPENAI_API_KEY is available."
          fi

      ## Step 5: Run the translation script using OpenAI API
      - name: Translate strings using OpenAI API
        id: translation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/translate_strings.py \
            --content '${{ inputs.content }}' \
            --languages '${{ inputs.languages }}' \
            --model '${{ inputs.gpt_model }}' \
            --instruction '${{ inputs.general_instruction }}'
          
          # Assume the script outputs num_of_languages and tokens_count_used
          # Write these outputs to $GITHUB_OUTPUT
          echo "num_of_languages=$(cat num_of_languages.txt)" >> $GITHUB_OUTPUT
          echo "tokens_count_used=$(cat tokens_count_used.txt)" >> $GITHUB_OUTPUT

      ## Step 6: Upload the translation results as an artifact for use in downstream jobs
      - name: Upload translations as artifact
        id: upload-translations
        uses: actions/upload-artifact@v3
        with:
          name: translations
          path: translations.json

